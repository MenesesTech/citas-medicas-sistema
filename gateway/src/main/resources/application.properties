# Nombre del microservicio (para Eureka)
spring.application.name=gateway

# Puerto del Gateway
server.port=8900

# ==============================
# Eureka Client Configuración
# ==============================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.registry-fetch-interval-seconds=5

# ==============================
# Gateway: Descubrimiento dinámico (opcional si defines rutas manuales)
# ==============================
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# ==============================
# RUTAS PERSONALIZADAS
# ==============================

# Auth Service (Login / Registro)
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=lb://ms-auth-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**

# Usuario Service
spring.cloud.gateway.routes[1].id=usuario-service
spring.cloud.gateway.routes[1].uri=lb://ms-auth-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/usuarios/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

# Paciente Service
spring.cloud.gateway.routes[2].id=paciente-service
spring.cloud.gateway.routes[2].uri=lb://ms-patient-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/pacientes/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

# Medico Service
spring.cloud.gateway.routes[3].id=medico-service
spring.cloud.gateway.routes[3].uri=lb://ms-medico-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/medicos/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1

# Citas Service
spring.cloud.gateway.routes[4].id=citas-service
spring.cloud.gateway.routes[4].uri=lb://ms-citas-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/citas/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1

# ==============================
# Timeout (opcional pero recomendado)
# ==============================
spring.cloud.gateway.httpclient.connect-timeout=3000
spring.cloud.gateway.httpclient.response-timeout=5s

# ==============================
# CORS
# ==============================
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000,http://localhost:5173
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true

# ==============================
# Logging
# ==============================
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty=INFO

app.jwt.secret=a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2